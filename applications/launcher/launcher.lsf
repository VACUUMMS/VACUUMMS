#!/bin/csh
#
# Simple LSF script for submitting multiple serial
# jobs (e.g. parametric studies) using an MPI wrapper
# to launch the jobs.
#
# To use, build the launcher executable and your
# serial application(s) and place them in your WORKDIR
# directory.  Then, edit the CONTROL_FILE to specify 
# each executable per process.
#-------------------------------------------------------
#-------------------------------------------------------
# 
#         <------ Setup Parameters ------>
#
#BSUB -J Parametric 
#BSUB -n 8
#BSUB -q normal
#BSUB -o Parametric.o%J -W 1:00
#
# Usage:
#	#BSUB -n <number of processors> 
#	#BSUB -W [hours:]minutes to specify run time limit
# 	#BSUB -J <job name>
# 	#BSUB -q <queue name>
# 	#BSUB -o <job output file>
#	   NOTE: The macro %J encodes the job id. 
#
setenv EXECUTABLE     launcher      
setenv CONTROL_FILE   paramlist
setenv WORKDIR        .
# 
# Variable description:
#
#  EXECUTABLE     = name of the job launcher executable
#  CONTROL_FILE   = text input file which specifies
#                   executable for each MPI process
#
#      <------ End Setup Parameters ------>
#--------------------------------------------------------
#--------------------------------------------------------

#----------------
# Error Checking
#----------------

if ( ! -e $WORKDIR ) then
	echo "\nError: unable to change to working directory."
	echo "       $WORKDIR"
	echo "\nJob not submitted."
	exit
endif

if ( ! -f $WORKDIR/$EXECUTABLE ) then
	echo "\nError: unable to find launcher executable $EXECUTABLE."
	echo "\nJob not submitted."
	exit
endif

if ( ! -f $WORKDIR/$CONTROL_FILE ) then
	echo "\nError: unable to find input control file $CONTROL_FILE."
	echo "\nJob not submitted."
	exit
endif

cd $WORKDIR/

set TOTAL=0
foreach val ($LSB_MCPU_HOSTS)
    if ($val == "1" || $val == "2") then
	@ TOTAL = $TOTAL + $val
    endif
end

echo "\nTotal MPI processes requested = "$TOTAL"\n"

set icnt=1

while ($icnt <= $TOTAL) 
    setenv TMP `cat $CONTROL_FILE | awk 'NR=='$icnt | awk '{print $1}'`
    if ( $TMP == "") then
	echo "\nError: Not enough processes specified in control file"
	echo "       executable not defined for process $icnt of $TOTAL"
	echo "\nJob not submitted."
	exit
    endif
    if ( ! -f $TMP ) then
	echo "\nError: Executable not found for process $icnt of $TOTAL"
	echo "\nJob not submitted."
	exit
    endif
    @ icnt++
end

#----------------
# Job Submission
#----------------

echo " LSF_SUBMIT_DIR: $LS_SUBCWD"
echo " WORKING DIR:   $WORKDIR/"
set PJL=gmmpirun_wrapper

#------------------------------------------------------------------------
# Uncomment the following two lines if executing more tasks than processors.
# Set NSERIAL to something different if you do not need to execute everything 
# in $CONTROL_FILE.
#------------------------------------------------------------------------
#set NSERIAL=`cat $CONTROL_FILE | wc -l`
#pam -g 1 $PJL ./$EXECUTABLE $CONTROL_FILE $NSERIAL
#echo "pam -g 1 $PJL ./$EXECUTABLE $CONTROL_FILE $NSERIAL"

#------------------------------------------------------------------------
# Uncomment the following line if executing the same number of tasks as
# processors
# ------------------------------------------------------------------------
pam -g 1 $PJL ./$EXECUTABLE $CONTROL_FILE
echo "pam -g 1 $PJL ./$EXECUTABLE $CONTROL_FILE"

